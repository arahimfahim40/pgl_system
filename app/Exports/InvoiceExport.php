<?phpnamespace App\Exports;use App\LogInvoices;use Maatwebsite\Excel\Concerns\FromCollection;use App\ClearLog;use DB;use Illuminate\Support\Facades\Auth;use Maatwebsite\Excel\Concerns\WithHeadings;use Maatwebsite\Excel\Concerns\ShouldAutoSize;// use Maatwebsite\Excel\Concerns\WithEvents;// use Maatwebsite\Excel\Events\AfterSheet;use Illuminate\Http\Request;use Maatwebsite\Excel\Facades\Excel;class InvoiceExport implements FromCollection,WithHeadings{    public function __construct($status)    {        $this->status = $status;    }    public function headings(): array    {        return [            'Clear Log',            'Custom Duty',            'Port Handling',            'VCC',            'Transporter Charges',            'E Token',            'Local Service Charges',            'Bill Of Entry',            'Other Charges',            'VCC Charges',            'Single VCC Charges',            'Wash Fine Charges',            'Repairing Cost Charges',            'Export Services Fees',            'Detention Charges',            'Demurrage Charges',            'Inspection Charges',            'Deliver Order Charges',        ];    }    /**     * @return \Illuminate\Support\Collection     */    public function collection()    {        $all = 0;        if ($this->status == 4) {            $this->status = 3;        }         elseif ($this->status == 2) {            $this->status = 2;        }        elseif($this->status == 1){            $all = 1;        }         elseif ($this->status == 5) {            $this->status = 4;        }         elseif ($this->status == 3) {            $this->status = 1;        }        $data = LogInvoices::select('log_id', 'custom_duty', 'port_handling', 'vcc', 'transporter_charges', 'e_token', 'local_service_charges', 'bill_of_entry', 'other_charges', 'vcc_charges', 'single_vcc_charges', 'wash_fine_charges',            'repairing_cost_charges', 'export_services_fees', 'detention_charges', 'demurrage_charges', 'inspection_charges', 'deliver_order_charges');        if ($all != 1) {            $data->where('status', $this->status);        }        return  $data->orderBy('id', 'DESC')->get();    }    // public function registerEvents(): array    // {    //     return [    //         AfterSheet::class => function (AfterSheet $event) {    //             $cellRange = 'A1:W1'; // All headers    //             $event->sheet->getDelegate()->getStyle($cellRange)->getFont()->setSize(14);    //         },    //     ];    // }}